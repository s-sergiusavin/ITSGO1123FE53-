* {
    font-size: 20px;
    box-sizing: border-box;
}

.responsiveContainer {
    font-size: 30px;
    border: 5px dotted red;
    width: 90%;
}

.responsiveSpanParent {
    font-size: 0.5em;
}

.responsiveSpan {
    font-size: 0.5rem;
}

.layer1 {
    border: 2px solid black;
    border-radius: 5px;
    background-color: aquamarine;
    width: 90%;
    padding: 20px;
}

.layer2 {
    border: 2px solid red;
    background-color: lightsalmon;
    width: 50%;
    height: 100px;
}

.responsiveImage {
    /* Cu width:100% se mareste la infinit */
    /* width: 100%; */
    /* cu max-width:100% se pareste pana ajunge la dimensiunea initiala */
    max-width: 100%;
}

.lowRes {
    max-width: 100%;
}

.box {
    width: 30%;
    /* vw ==> viewport width */
    width: 30vw;
    /* vh ==> viewport height */
    height: 20vh;
    background-color: red;
    border: 1px solid black;
}

.flexContainer {
    width: 90%;
    display: flex;
    border: 5px solid green;
    gap: 10px;
    justify-content: space-between;
}

.flexContainer .flexItem {
    width: 100px;
    height: 100px;
    background-color: blue;
    border: 1px solid black;
}

.flexItem {
    background-color: red;
}

/* trebuie scrise media queries in ordine inversa a incluziunii */
@media only screen and (max-width: 1000px) {
    body {
        background-color: yellow;
    }
}

@media only screen and (max-width: 700px) {
    /* Aici incep aplicarea proprietatilor pana in 700px */

    body {
        background-color: lightblue;
    }

    .lowRes {
        display: none;
    }

    .flexContainer {
        flex-direction: column;
        align-items: center;
    }

    /* Aici se termina aplicarea proprietatilor pana in 700px */
}

@media screen and (min-width:1300px) {
    body {
        background-color: salmon;
    }
}